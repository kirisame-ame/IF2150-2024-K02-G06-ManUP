[
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "getBudgetAllocations",
        "importPath": "controllers.budgetC",
        "description": "controllers.budgetC",
        "isExtraImport": true,
        "detail": "controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "deleteBudget",
        "importPath": "controllers.budgetC",
        "description": "controllers.budgetC",
        "isExtraImport": true,
        "detail": "controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "updateBudget",
        "importPath": "controllers.budgetC",
        "description": "controllers.budgetC",
        "isExtraImport": true,
        "detail": "controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "read_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "create_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "getNewId",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "read_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "delete_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "read_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "delete_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_type",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_category",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_date",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "sort_transaction_by_date_asc",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "sort_transaction_by_date_desc",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "update_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "read_transaction",
        "importPath": "controllers.transactionC",
        "description": "controllers.transactionC",
        "isExtraImport": true,
        "detail": "controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QScrollArea",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSpacerItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSplitter",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QScrollArea",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QInputDialog",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QScrollArea",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QInputDialog",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "FigureCanvasQTAgg",
        "importPath": "matplotlib.backends.backend_qt5agg",
        "description": "matplotlib.backends.backend_qt5agg",
        "isExtraImport": true,
        "detail": "matplotlib.backends.backend_qt5agg",
        "documentation": {}
    },
    {
        "label": "FigureCanvasQTAgg",
        "importPath": "matplotlib.backends.backend_qt5agg",
        "description": "matplotlib.backends.backend_qt5agg",
        "isExtraImport": true,
        "detail": "matplotlib.backends.backend_qt5agg",
        "documentation": {}
    },
    {
        "label": "Navbar",
        "importPath": "views.components.navbar",
        "description": "views.components.navbar",
        "isExtraImport": true,
        "detail": "views.components.navbar",
        "documentation": {}
    },
    {
        "label": "Navbar",
        "importPath": "views.components.navbar",
        "description": "views.components.navbar",
        "isExtraImport": true,
        "detail": "views.components.navbar",
        "documentation": {}
    },
    {
        "label": "Navbar",
        "importPath": "views.components.navbar",
        "description": "views.components.navbar",
        "isExtraImport": true,
        "detail": "views.components.navbar",
        "documentation": {}
    },
    {
        "label": "Navbar",
        "importPath": "views.components.navbar",
        "description": "views.components.navbar",
        "isExtraImport": true,
        "detail": "views.components.navbar",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "get_four_most_recent_transaction",
        "importPath": "controllers.homeC",
        "description": "controllers.homeC",
        "isExtraImport": true,
        "detail": "controllers.homeC",
        "documentation": {}
    },
    {
        "label": "pie_chart_for_category_in_type_expense",
        "importPath": "controllers.homeC",
        "description": "controllers.homeC",
        "isExtraImport": true,
        "detail": "controllers.homeC",
        "documentation": {}
    },
    {
        "label": "remainder",
        "importPath": "controllers.homeC",
        "description": "controllers.homeC",
        "isExtraImport": true,
        "detail": "controllers.homeC",
        "documentation": {}
    },
    {
        "label": "get_four_most_recent_transaction",
        "importPath": "controllers.homeC",
        "description": "controllers.homeC",
        "isExtraImport": true,
        "detail": "controllers.homeC",
        "documentation": {}
    },
    {
        "label": "BudgetUI",
        "importPath": "views.budget",
        "description": "views.budget",
        "isExtraImport": true,
        "detail": "views.budget",
        "documentation": {}
    },
    {
        "label": "BudgetUI",
        "importPath": "views.budget",
        "description": "views.budget",
        "isExtraImport": true,
        "detail": "views.budget",
        "documentation": {}
    },
    {
        "label": "BudgetUI",
        "importPath": "views.budget",
        "description": "views.budget",
        "isExtraImport": true,
        "detail": "views.budget",
        "documentation": {}
    },
    {
        "label": "TransactionFormUI",
        "importPath": "views.create_transaction",
        "description": "views.create_transaction",
        "isExtraImport": true,
        "detail": "views.create_transaction",
        "documentation": {}
    },
    {
        "label": "TransactionFormEditUI",
        "importPath": "views.update_transaction",
        "description": "views.update_transaction",
        "isExtraImport": true,
        "detail": "views.update_transaction",
        "documentation": {}
    },
    {
        "label": "TransactionUI",
        "importPath": "views.transaction",
        "description": "views.transaction",
        "isExtraImport": true,
        "detail": "views.transaction",
        "documentation": {}
    },
    {
        "label": "TransactionUI",
        "importPath": "views.transaction",
        "description": "views.transaction",
        "isExtraImport": true,
        "detail": "views.transaction",
        "documentation": {}
    },
    {
        "label": "HomeUI",
        "importPath": "views.home",
        "description": "views.home",
        "isExtraImport": true,
        "detail": "views.home",
        "documentation": {}
    },
    {
        "label": "getBudgetAllocations",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudgetAllocations():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    return budget\ndef updateBudget(data):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget.loc[budget['id'] == data['id'], 'budgetName'] = data['budgetName']\n    budget.loc[budget['id'] == data['id'], 'budgetAmount'] = data['budgetAmount']\n    budget.loc[budget['id'] == data['id'], 'remainder'] = data['remainder']\n    budget.loc[budget['id'] == data['id'], 'startDate'] = data['startDate']\n    budget.loc[budget['id'] == data['id'], 'endDate'] = data['endDate']",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "updateBudget",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def updateBudget(data):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget.loc[budget['id'] == data['id'], 'budgetName'] = data['budgetName']\n    budget.loc[budget['id'] == data['id'], 'budgetAmount'] = data['budgetAmount']\n    budget.loc[budget['id'] == data['id'], 'remainder'] = data['remainder']\n    budget.loc[budget['id'] == data['id'], 'startDate'] = data['startDate']\n    budget.loc[budget['id'] == data['id'], 'endDate'] = data['endDate']\n    budget.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'), index=False)\ndef createBudget(data):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "createBudget",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def createBudget(data):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = pd.concat([budget, pd.DataFrame([data])], ignore_index=True)\n    budget.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'), index=False)\ndef getBudget(id):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['id'] == id]\n    return budget\ndef deleteBudget(id):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getBudget",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudget(id):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['id'] == id]\n    return budget\ndef deleteBudget(id):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['id'] != id]\n    budget.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'), index=False)\ndef getBudgetByStartDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "deleteBudget",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def deleteBudget(id):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['id'] != id]\n    budget.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'), index=False)\ndef getBudgetByStartDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['startDate'] == date]\n    return budget\ndef getBudgetByEndDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getBudgetByStartDate",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudgetByStartDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['startDate'] == date]\n    return budget\ndef getBudgetByEndDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['endDate'] == date]\n    return budget\ndef getBudgetByBudgetName(budgetName):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getBudgetByEndDate",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudgetByEndDate(date):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['endDate'] == date]\n    return budget\ndef getBudgetByBudgetName(budgetName):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['budgetName'] == budgetName]\n    return budget\ndef getBudgetByBudgetAmount(budgetAmount):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getBudgetByBudgetName",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudgetByBudgetName(budgetName):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['budgetName'] == budgetName]\n    return budget\ndef getBudgetByBudgetAmount(budgetAmount):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['budgetAmount'] == budgetAmount]\n    return budget\ndef sortBudgetByBudgetAmount():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getBudgetByBudgetAmount",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getBudgetByBudgetAmount(budgetAmount):\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget[budget['budgetAmount'] == budgetAmount]\n    return budget\ndef sortBudgetByBudgetAmount():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('budgetAmount')\n    return budget\ndef sortBudgetByStartDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "sortBudgetByBudgetAmount",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def sortBudgetByBudgetAmount():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('budgetAmount')\n    return budget\ndef sortBudgetByStartDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('startDate')\n    return budget\ndef sortBudgetByEndDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "sortBudgetByStartDate",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def sortBudgetByStartDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('startDate')\n    return budget\ndef sortBudgetByEndDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('endDate')\n    return budget\ndef getNewIdB():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "sortBudgetByEndDate",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def sortBudgetByEndDate():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    budget = budget.sort_values('endDate')\n    return budget\ndef getNewIdB():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    return budget['id'].max() + 1",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "getNewIdB",
        "kind": 2,
        "importPath": "src.controllers.budgetC",
        "description": "src.controllers.budgetC",
        "peekOfCode": "def getNewIdB():\n    budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))\n    return budget['id'].max() + 1",
        "detail": "src.controllers.budgetC",
        "documentation": {}
    },
    {
        "label": "get_four_most_recent_transaction",
        "kind": 2,
        "importPath": "src.controllers.homeC",
        "description": "src.controllers.homeC",
        "peekOfCode": "def get_four_most_recent_transaction():\n    data = read_transaction()\n    data = data.sort_values('id', ascending=False).head(4)\n    return data.to_dict(orient='records')\ndef remainder():\n    data = read_transaction()\n    income = data[data['type'] == 'income']['amount'].sum()\n    expense = data[data['type'] == 'expense']['amount'].sum()\n    total_budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))['budgetAmount'].sum()\n    remainder = total_budget + income - expense",
        "detail": "src.controllers.homeC",
        "documentation": {}
    },
    {
        "label": "remainder",
        "kind": 2,
        "importPath": "src.controllers.homeC",
        "description": "src.controllers.homeC",
        "peekOfCode": "def remainder():\n    data = read_transaction()\n    income = data[data['type'] == 'income']['amount'].sum()\n    expense = data[data['type'] == 'expense']['amount'].sum()\n    total_budget = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'budget.csv'))['budgetAmount'].sum()\n    remainder = total_budget + income - expense\n    return remainder\ndef pie_chart_for_category_in_type_expense():\n    budget_data = getBudgetAllocations()\n    budget_amount = budget_data['budgetAmount']",
        "detail": "src.controllers.homeC",
        "documentation": {}
    },
    {
        "label": "pie_chart_for_category_in_type_expense",
        "kind": 2,
        "importPath": "src.controllers.homeC",
        "description": "src.controllers.homeC",
        "peekOfCode": "def pie_chart_for_category_in_type_expense():\n    budget_data = getBudgetAllocations()\n    budget_amount = budget_data['budgetAmount']\n    budget_names = budget_data['budgetName']\n    budget_amount.index = budget_names\n    # Append the remainder to pie chart\n    remainder_ = remainder()\n    budget_amount = pd.concat([budget_amount, pd.Series(remainder_, index=['Remainder'])])\n    # Create a matplotlib figure and axis with transparent background\n    figure, ax = plt.subplots(figsize=(5, 5), tight_layout=True)",
        "detail": "src.controllers.homeC",
        "documentation": {}
    },
    {
        "label": "read_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def read_transaction():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    return transaction\ndef create_transaction(data):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = pd.concat([transaction, pd.DataFrame([data])], ignore_index=True)\n    transaction.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'), index=False)\ndef delete_transaction(id):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))        \n    transaction = transaction[transaction['id'] != id]",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "create_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def create_transaction(data):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = pd.concat([transaction, pd.DataFrame([data])], ignore_index=True)\n    transaction.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'), index=False)\ndef delete_transaction(id):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))        \n    transaction = transaction[transaction['id'] != id]\n    transaction.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'), index=False)\ndef update_transaction(data):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "delete_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def delete_transaction(id):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))        \n    transaction = transaction[transaction['id'] != id]\n    transaction.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'), index=False)\ndef update_transaction(data):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction.loc[transaction['id'] == data['id'], 'amount'] = data['amount']\n    transaction.loc[transaction['id'] == data['id'], 'date'] = data['date']\n    transaction.loc[transaction['id'] == data['id'], 'type'] = data['type']\n    transaction.loc[transaction['id'] == data['id'], 'category'] = data['category']",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "update_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def update_transaction(data):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction.loc[transaction['id'] == data['id'], 'amount'] = data['amount']\n    transaction.loc[transaction['id'] == data['id'], 'date'] = data['date']\n    transaction.loc[transaction['id'] == data['id'], 'type'] = data['type']\n    transaction.loc[transaction['id'] == data['id'], 'category'] = data['category']\n    transaction.to_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'), index=False)\ndef get_transaction(id):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['id'] == id]",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def get_transaction(id):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['id'] == id]\n    return transaction\ndef total_transaction():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    income = transaction[transaction['type'] == 'income']['amount'].sum()\n    expense = transaction[transaction['type'] == 'expense']['amount'].sum()\n    total = income - expense\n    return total",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "total_transaction",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def total_transaction():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    income = transaction[transaction['type'] == 'income']['amount'].sum()\n    expense = transaction[transaction['type'] == 'expense']['amount'].sum()\n    total = income - expense\n    return total\ndef get_transaction_by_type(type):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['type'] == type]\n    return transaction",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_type",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def get_transaction_by_type(type):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['type'] == type]\n    return transaction\ndef get_transaction_by_category(category):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['category'] == category]\n    return transaction\ndef get_transaction_by_date(date):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_category",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def get_transaction_by_category(category):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['category'] == category]\n    return transaction\ndef get_transaction_by_date(date):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['date'] == date]\n    return transaction\ndef sort_transaction_by_date_asc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "get_transaction_by_date",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def get_transaction_by_date(date):\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction[transaction['date'] == date]\n    return transaction\ndef sort_transaction_by_date_asc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction.sort_values('date')\n    return transaction\ndef sort_transaction_by_date_desc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "sort_transaction_by_date_asc",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def sort_transaction_by_date_asc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction.sort_values('date')\n    return transaction\ndef sort_transaction_by_date_desc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction.sort_values('date', ascending=False)\n    return transaction\ndef getNewId():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "sort_transaction_by_date_desc",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def sort_transaction_by_date_desc():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    transaction = transaction.sort_values('date', ascending=False)\n    return transaction\ndef getNewId():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    return transaction['id'].max() + 1",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "getNewId",
        "kind": 2,
        "importPath": "src.controllers.transactionC",
        "description": "src.controllers.transactionC",
        "peekOfCode": "def getNewId():\n    transaction = pd.read_csv(os.path.join(os.getcwd(), 'src', 'models', 'transaction.csv'))\n    return transaction['id'].max() + 1",
        "detail": "src.controllers.transactionC",
        "documentation": {}
    },
    {
        "label": "Navbar",
        "kind": 6,
        "importPath": "src.views.components.navbar",
        "description": "src.views.components.navbar",
        "peekOfCode": "class Navbar(QWidget):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.setup_ui()\n    def setup_ui(self):\n        # Navigation bar\n        nav_bar = QHBoxLayout(self)\n        self.btn_home = QPushButton(\"Home\")\n        self.btn_transaction = QPushButton(\"Transactions\")\n        self.btn_budget = QPushButton(\"Budget\")",
        "detail": "src.views.components.navbar",
        "documentation": {}
    },
    {
        "label": "BudgetUI",
        "kind": 6,
        "importPath": "src.views.budget",
        "description": "src.views.budget",
        "peekOfCode": "class BudgetUI(QWidget):\n    budget_updated = pyqtSignal()\n    def __init__(self):\n        super().__init__()\n        self.pie_chart = None\n        self.scroll_area = None\n        self.budget_layout = None  # Store the budget layout\n        self.setup_ui()\n    def setup_ui(self):\n        # Main layout",
        "detail": "src.views.budget",
        "documentation": {}
    },
    {
        "label": "TransactionFormUI",
        "kind": 6,
        "importPath": "src.views.create_transaction",
        "description": "src.views.create_transaction",
        "peekOfCode": "class TransactionFormUI(QWidget):\n    closed = pyqtSignal()\n    def __init__(self, transaction_ui):\n        super().__init__()\n        self.transaction_ui = transaction_ui\n        self.setStyleSheet(\"\"\"\n            QWidget {\n                background-color: white;\n                font-family: Arial, sans-serif;\n            }",
        "detail": "src.views.create_transaction",
        "documentation": {}
    },
    {
        "label": "TransactionDeleteUI",
        "kind": 6,
        "importPath": "src.views.delete_transaction",
        "description": "src.views.delete_transaction",
        "peekOfCode": "class TransactionDeleteUI(QWidget):\n    def __init__(self, transaction_ui):\n        super().__init__()\n        self.transaction_ui = transaction_ui\n        self.setup_ui()\n    def setup_ui(self):\n        input_layout = QVBoxLayout(self)\n        self.id_label = QLabel(\"ID:\")\n        self.id_input = QLineEdit()\n        input_layout.addWidget(self.id_label)",
        "detail": "src.views.delete_transaction",
        "documentation": {}
    },
    {
        "label": "HomeUI",
        "kind": 6,
        "importPath": "src.views.home",
        "description": "src.views.home",
        "peekOfCode": "class HomeUI(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.budget_ui = BudgetUI()\n        self.transaction_ui = TransactionUI()\n        self.setup_ui()\n    def setup_ui(self):\n        # Main layout\n        main_layout = QVBoxLayout(self)\n        # add navbar",
        "detail": "src.views.home",
        "documentation": {}
    },
    {
        "label": "TransactionUI",
        "kind": 6,
        "importPath": "src.views.transaction",
        "description": "src.views.transaction",
        "peekOfCode": "class TransactionUI(QWidget):\n    transaction_updated = pyqtSignal()\n    refresh_budget = pyqtSignal()\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.setStyleSheet(\"\"\"\n            QWidget {\n                background-color: white;\n                font-family: Arial, sans-serif;\n            }",
        "detail": "src.views.transaction",
        "documentation": {}
    },
    {
        "label": "TransactionFormEditUI",
        "kind": 6,
        "importPath": "src.views.update_transaction",
        "description": "src.views.update_transaction",
        "peekOfCode": "class TransactionFormEditUI(QWidget):\n    closed = pyqtSignal()\n    update_budget = pyqtSignal()\n    def __init__(self, transaction_ui, id):\n        super().__init__()\n        self.transaction_ui = transaction_ui\n        self.id = id\n        self.setup_ui()\n    def setup_ui(self):\n        self.setWindowTitle(\"Edit Transaction\")",
        "detail": "src.views.update_transaction",
        "documentation": {}
    },
    {
        "label": "HomeController",
        "kind": 6,
        "importPath": "src.app",
        "description": "src.app",
        "peekOfCode": "class HomeController(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"ManUP Budgeting App\")\n        # Create a central widget to hold other widgets\n        self.central_widget = QWidget()\n        self.setCentralWidget(self.central_widget)\n        # Create layouts\n        self.main_layout = QVBoxLayout(self.central_widget)\n        # Initialize the UIs once",
        "detail": "src.app",
        "documentation": {}
    }
]